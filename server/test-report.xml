<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\Users\dadix\Desktop\scuola\magistrale\sofEngII\SPG2\SoftEngII-P08-SPG\server\serverIntegration.test.js">
    <testCase name="Test suite Integration Server Post booking fail create a new booking fails due to idClient = 0" duration="149"/>
    <testCase name="Test suite Integration Server Post booking fail create a new booking fails due to idClient = -1" duration="320"/>
    <testCase name="Test suite Integration Server Post booking success should create a new booking" duration="227"/>
    <testCase name="Test suite Integration Server Post booking mode success should create a new booking mode" duration="427"/>
    <testCase name="Test suite Integration Server Post new client fail create a new client fails due to invalid email" duration="21"/>
    <testCase name="Test suite Integration Server Post new client fail create a new client fails due to invalid name" duration="17"/>
    <testCase name="Test suite Integration Server Post new client fail create a new client fails due to invalid surname" duration="12"/>
    <testCase name="Test suite Integration Server Post new client fail create a new client fails due to invalid password" duration="5"/>
    <testCase name="Test suite Integration Server Post new client success create a new client success" duration="790"/>
    <testCase name="Test suite Integration Server Get a wallet fail send a invalid id of client" duration="417"/>
    <testCase name="Test suite Integration Server Put a qty of a product send a invalid qty" duration="89"/>
    <testCase name="Test suite Integration Server Put a qty of a product send a invalid id product" duration="97"/>
    <testCase name="Test suite Integration Server Put a row in the table BOOKING_PRODUCTS send a invalid Booking id" duration="111"/>
    <testCase name="Test suite Integration Server Put a row in the table BOOKING_PRODUCTS send a invalid product id" duration="94"/>
    <testCase name="Test suite Integration Server Put a row in the table BOOKING_PRODUCTS send a invalid qty" duration="96"/>
    <testCase name="Test suite Integration Server Client Session success send a valid user" duration="233"/>
    <testCase name="Test suite Integration Server Client Session fails send a wrong psw" duration="448"/>
    <testCase name="Test suite Integration Server Get client by email success send a valid email" duration="707"/>
    <testCase name="Test suite Integration Server Get client by email fails don&apos;t send an email" duration="614"/>
    <testCase name="Test suite Integration Server Get client by email fails send a wrong email" duration="90"/>
    <testCase name="Test suite Integration Server Get clients success ask the list of clients" duration="116"/>
    <testCase name="Test suite Integration Server Get categories success ask the list of categories" duration="137"/>
    <testCase name="Test suite Integration Server Farmer Session success send a valid user" duration="213"/>
    <testCase name="Test suite Integration Server Farmer Session fails send a wrong psw" duration="198"/>
    <testCase name="Test suite Integration Server Shop Employee Session success send a valid user" duration="723"/>
    <testCase name="Test suite Integration Server Shop Employee Session fails send a wrong psw" duration="345"/>
    <testCase name="Test suite Integration Server get all products success test get api/products endpoint" duration="369"/>
    <testCase name="Test suite Integration Server get all CONFIRMED products for a particular farmer success test //GET /api/products/farmers/:id success" duration="120"/>
    <testCase name="Test suite Integration Server get all products expected by farmer id success test get /api/farmers/:farmerid/products_expected endpoint" duration="113"/>
    <testCase name="Test suite Integration Server get all confirmed products expected by farmer id success test get /api/products/farmers/1 endpoint" duration="109"/>
    <testCase name="Test suite Integration Server get all bookings success test get api/bookings endpoint" duration="108"/>
    <testCase name="Test suite Integration Server get all bookings for a client success test get api/bookings/clients/1 endpoint" duration="116"/>
    <testCase name="Test suite Integration Server get all bookings for a non-existing client success test get api/bookings/clients/100 endpoint" duration="99"/>
    <testCase name="Test suite Integration Server update wallet balance fails send a negative balance amount" duration="121"/>
    <testCase name="Test suite Integration Server update wallet balance fails send a client id which does not exist" duration="136"/>
    <testCase name="Test suite Integration Server update wallet balance fails  do not send a client id " duration="214"/>
    <testCase name="Test suite Integration Server update wallet balance success send a valid body" duration="263"/>
    <testCase name="Test suite Integration Server edit the state of a booking send a invalid id booking" duration="14"/>
    <testCase name="Test suite Integration Server edit the state of a booking send a valid body" duration="771"/>
    <testCase name="Test suite Integration Server get all bookings with PENDINGCANCELATION state test /api/bookingsPendingCancelation endpoint" duration="204"/>
    <testCase name="Test suite Integration Server post a vector of product expected test with a no valid body, without a name field" duration="128"/>
    <testCase name="Test suite Integration Server Post ack success should create a new ack" duration="214"/>
    <testCase name="Test suite Integration Server get acks with state NEW success should retrieve a list of acks with state NEW" duration="312"/>
    <testCase name="Test suite Integration Server Put products with new state right put with all right fields" duration="88"/>
    <testCase name="Test suite Integration Server Put products with new state wrong put with a element without id field" duration="130"/>
    <testCase name="Test suite Integration Server Put products with new state wrong put with a invalid id" duration="100"/>
  </file>
  <file path="C:\Users\dadix\Desktop\scuola\magistrale\sofEngII\SPG2\SoftEngII-P08-SPG\server\dao.test.js">
    <testCase name="Test suite DAO the creation of a new booking fails because id client is missing" duration="223"/>
    <testCase name="Test suite DAO the creation of a new booking fails because state is missing" duration="93"/>
    <testCase name="Test suite DAO the creation of a new booking is done" duration="409"/>
    <testCase name="Test suite DAO the creation of a new client fails because email is missing" duration="1117"/>
    <testCase name="Test suite DAO the creation of a new client fails because name is missing" duration="1247">
      <failure message="Error: SQLITE_BUSY: database is locked"><![CDATA[Error: SQLITE_BUSY: database is locked]]></failure>
    </testCase>
    <testCase name="Test suite DAO the creation of a new client fails because surname is missing" duration="577"/>
    <testCase name="Test suite DAO the creation of a new client fails because password is missing" duration="136"/>
    <testCase name="Test suite DAO the creation of a new client is done" duration="450"/>
    <testCase name="Test suite DAO get client return false because no email provided" duration="335"/>
    <testCase name="Test suite DAO get client return false because no user with that email exists" duration="98"/>
    <testCase name="Test suite DAO get client return false because wrong password" duration="601"/>
    <testCase name="Test suite DAO get client return success" duration="855"/>
    <testCase name="Test suite DAO get client return -1 because no email provided" duration="83"/>
    <testCase name="Test suite DAO get client return -1 because no user with that email exists" duration="98"/>
    <testCase name="Test suite DAO get client return success" duration="110"/>
    <testCase name="Test suite DAO get client return success" duration="92"/>
    <testCase name="Test suite DAO get categories return success" duration="98"/>
    <testCase name="Test suite DAO get client by id return false because no user with that id exists" duration="100"/>
    <testCase name="Test suite DAO get client by id return success" duration="208"/>
    <testCase name="Test suite DAO get products expected by farmer id return empty array because no farmer with that id exists" duration="101"/>
    <testCase name="Test suite DAO get products expected by farmer return success" duration="99"/>
    <testCase name="Test suite DAO get farmer return false because no email provided" duration="234"/>
    <testCase name="Test suite DAO get farmer return false because no user with that email exists" duration="113"/>
    <testCase name="Test suite DAO get farmer return false because wrong psw" duration="218"/>
    <testCase name="Test suite DAO get farmer return success" duration="1144"/>
    <testCase name="Test suite DAO get farmer by id return false because no farmer with that id exists" duration="341"/>
    <testCase name="Test suite DAO get farmer by id return a farmer" duration="107"/>
    <testCase name="Test suite DAO get shop employee return false because no email provided" duration="90"/>
    <testCase name="Test suite DAO get shop employee return false because no user with that email exists" duration="125"/>
    <testCase name="Test suite DAO get shop employee return false because wrong psw" duration="222"/>
    <testCase name="Test suite DAO get shop employee return success" duration="345"/>
    <testCase name="Test suite DAO get shop employee by id return false because no shop employee with that id exists" duration="1110"/>
    <testCase name="Test suite DAO get shop employee by id return a shop employee" duration="99"/>
    <testCase name="get all products success" duration="1"/>
    <testCase name="get all all CONFIRMED products for a particular farmer success" duration="1"/>
    <testCase name="get all bookings success" duration="1"/>
    <testCase name="get all bookings for a client success" duration="1"/>
    <testCase name="get all bookings for a non-existing client success" duration="0"/>
    <testCase name="the creation of a new booking mode success" duration="106"/>
    <testCase name="updating the wallet failed bacause client was not found" duration="1"/>
    <testCase name="updating the wallet failed bacause client id was not provided" duration="1"/>
    <testCase name="update of wallet balance was successfull" duration="141"/>
    <testCase name="Creation of wallet with balance= 0.0 was successfull" duration="89"/>
    <testCase name="Creation of wallet fails,id 1 already exists" duration="2"/>
    <testCase name="Edit the state of a booking with a valid request" duration="2"/>
    <testCase name="create a row in the booking product table" duration="105"/>
    <testCase name="get all bookings with pendingcancelation state" duration="3"/>
    <testCase name="Insert a new Product expected without a field category" duration="3"/>
    <testCase name="INSERT into Product_WEEK by receiving a product confirmed by farmer with state = CONFIRMED success" duration="104"/>
    <testCase name="edit state of a product receiving an array with id-state" duration="2"/>
    <testCase name="get all acks with NEW state success" duration="1"/>
    <testCase name="the creation of ack success" duration="98"/>
  </file>
</testExecutions>